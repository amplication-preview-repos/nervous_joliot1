/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsNumber,
  Min,
  Max,
  IsOptional,
  IsEnum,
  IsString,
  MaxLength,
  ValidateNested,
} from "class-validator";

import { EnumOrderStatus } from "./EnumOrderStatus";
import { PaymentUpdateManyWithoutOrdersInput } from "./PaymentUpdateManyWithoutOrdersInput";
import { Type } from "class-transformer";
import { ShipmentUpdateManyWithoutOrdersInput } from "./ShipmentUpdateManyWithoutOrdersInput";
import { OrderItemUpdateManyWithoutOrdersInput } from "./OrderItemUpdateManyWithoutOrdersInput";

@InputType()
class OrderUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  total?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumOrderStatus,
  })
  @IsEnum(EnumOrderStatus)
  @IsOptional()
  @Field(() => EnumOrderStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  customerId?: string | null;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    type: () => ShipmentUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => ShipmentUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => ShipmentUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  shipments?: ShipmentUpdateManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    type: () => OrderItemUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => OrderItemUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => OrderItemUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  orderItems?: OrderItemUpdateManyWithoutOrdersInput;
}

export { OrderUpdateInput as OrderUpdateInput };
